---
name: Terraform CI/CD
##########################################
# Start jobs on push main branch         #
##########################################

on:
  workflow_dispatch: { }
  push:
    branches:
      - main

env:
  TF_CLI_ARGS: '-no-color'
  TF_CLI_ARGS_destroy: '-auto-approve -refresh=false'
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  #TFVARS_PATH: '/tf/caf/caf-landingzone-example'
  #TF_VAR_workspace: 'sandpit'

jobs:
  lint:
    name: Codebase Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Run github/super-linter
        uses: docker://github/super-linter:v4.1.0
        env:
          # Lint all code
          VALIDATE_ALL_CODEBASE: true
          # Need to define main branch as default is set to master in super-linter
          DEFAULT_BRANCH: main
          # Enable setting the status of each individual linter run in the Checks section of a pull request
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The following linter types will be enabled:
          VALIDATE_BASH: true
          VALIDATE_BASH_EXEC: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_POWERSHELL: true
          VALIDATE_TERRAFORM: true
          VALIDATE_YAML: true
  tfsec:
    name: TF Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Initialize TF project
        run: |
          terraform init
      - name: Tfsec
        uses: tfsec/tfsec-sarif-action@master
        with:
          sarif_file: tfsec.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: [lint, tfsec]
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      #TF_WORKSPACE: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'Terraform Format'
        id: format
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.6
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: '.'
      - name: 'Terraform Init'
        id: init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.6
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '.'
      - name: 'Terraform Validate'
        id: validate
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.6
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: '.'
      - name: 'Terraform Plan'
        id: plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.6
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: '.'
      - name: Terraform Apply
        id: apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.6
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: '.'